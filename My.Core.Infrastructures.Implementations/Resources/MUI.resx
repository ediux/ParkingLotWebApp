<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessFailedCount" xml:space="preserve">
    <value>登入失敗次數</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>住址</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>內文</value>
  </data>
  <data name="ChildId" xml:space="preserve">
    <value>子群組</value>
  </data>
  <data name="ClaimType" xml:space="preserve">
    <value>宣告類型</value>
  </data>
  <data name="ClaimValue" xml:space="preserve">
    <value>宣告值</value>
  </data>
  <data name="CreateTime" xml:space="preserve">
    <value>建立時間</value>
  </data>
  <data name="CreateUserId" xml:space="preserve">
    <value>建立者</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>說明描述</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>顯示名稱</value>
  </data>
  <data name="EMail" xml:space="preserve">
    <value>電子郵件地址</value>
  </data>
  <data name="EMailConfirmed" xml:space="preserve">
    <value>電子郵件驗證狀態</value>
  </data>
  <data name="GroupId" xml:space="preserve">
    <value>群組識別碼</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>群組名稱</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>識別碼</value>
  </data>
  <data name="LastActivityTime" xml:space="preserve">
    <value>最後活動時間</value>
  </data>
  <data name="LastLoginFailTime" xml:space="preserve">
    <value>最後一次登入失敗時間</value>
  </data>
  <data name="LastUnlockedTime" xml:space="preserve">
    <value>最後解除鎖定時間</value>
  </data>
  <data name="LastUpdateTime" xml:space="preserve">
    <value>最後更新時間</value>
  </data>
  <data name="LastUpdateUserId" xml:space="preserve">
    <value>最後更新者</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>存取層級</value>
  </data>
  <data name="LockoutEnabled" xml:space="preserve">
    <value>鎖定狀態</value>
  </data>
  <data name="LockoutEndDate" xml:space="preserve">
    <value>鎖定結束日期</value>
  </data>
  <data name="LoginProvider" xml:space="preserve">
    <value>登入提供者名稱</value>
  </data>
  <data name="LogTime" xml:space="preserve">
    <value>紀錄時間</value>
  </data>
  <data name="LogUserName" xml:space="preserve">
    <value>操作者</value>
  </data>
  <data name="MessageResourceKey" xml:space="preserve">
    <value>本地化訊息識別碼</value>
  </data>
  <data name="OpreationCode" xml:space="preserve">
    <value>操作紀錄代碼</value>
  </data>
  <data name="ParentId" xml:space="preserve">
    <value>父群組</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>密碼</value>
  </data>
  <data name="PasswordHash" xml:space="preserve">
    <value>加密後密碼</value>
  </data>
  <data name="PhoneConfirmed" xml:space="preserve">
    <value>手機號碼驗證狀態</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>手機號碼</value>
  </data>
  <data name="ProfileId" xml:space="preserve">
    <value>基本資料識別碼</value>
  </data>
  <data name="ProviderKey" xml:space="preserve">
    <value>提供者鍵值</value>
  </data>
  <data name="ResetPasswordToken" xml:space="preserve">
    <value>密碼重設權杖</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>角色名稱</value>
  </data>
  <data name="SecurityStamp" xml:space="preserve">
    <value>安全戳記</value>
  </data>
  <data name="TwoFactorEnabled" xml:space="preserve">
    <value>兩步驟驗證</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>網路位址</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>使用者識別碼</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>帳號</value>
  </data>
  <data name="Void" xml:space="preserve">
    <value>狀態</value>
  </data>
</root>