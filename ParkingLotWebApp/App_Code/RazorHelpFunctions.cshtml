@functions{
    public static string GetAntiForgeryToken()
    {
        string cookieToken, formToken;
        AntiForgery.GetTokens(null, out cookieToken, out formToken);
        return string.Concat(cookieToken, ":", formToken);
    }
    public static string GetUserName(int id)
    {
        var db = My.Core.Infrastructures.Implementations.Models.OpenWebSiteEntities.Create();
        var userrepo = new My.Core.Infrastructures.Implementations.ApplicationUserRepository(db);

        var usr = userrepo.Find(id);

        if (usr != null)
        {

            return usr.UserName;
        }

        return "";
    }

    public static string GetRoleName(int RoleId)
    {
        var db = My.Core.Infrastructures.Implementations.Models.OpenWebSiteEntities.Create();
        var rolerepo = new My.Core.Infrastructures.Implementations.ApplicationRoleRepository(db);

        if (RoleId > 0)
        {
            return rolerepo.Find(RoleId).Name;
        }

        return "";
    }


}

@helper Geti18nText(string name)
{

var muitext = Resources.MUI.Common.ResourceManager.GetString(name);
if (string.IsNullOrEmpty(muitext))
{
        @Resources.MUI.WebPages.ResourceManager.GetString(name);
}else
{
        @Html.Raw(muitext)
}

}
