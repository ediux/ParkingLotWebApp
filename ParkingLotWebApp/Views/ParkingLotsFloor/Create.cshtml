@model ParkingLotWebApp.Models.ParkingLotsFloor
@using Microsoft.AspNet.Identity
@{
    if (Model.ParkingLotsID >0)
    {
        ViewBag.Title = string.Format(WebPages.ParkingLotFloors_Create_FromArea, Model.ParkingLotsDetail.Name);
    }
    else
    {
        ViewBag.Title = WebPages.ParkingLotFloors_Create_New;
    }

}
@section pageheader{
    <h1 class="page-header">@WebPages.ParkingLotFloors <small>@ViewBag.Title</small></h1>
}
@section breadcrumb{
    <li><a href="@Url.Action("Index","Manage")">管理</a></li>
    <li><a href="@Url.Action("Index")">@WebPages.ParkingLotAreas_Index</a></li>
    @if (string.IsNullOrEmpty(ViewBag.returnUrl as string) == false)
    {
        <li><a href="@ViewBag.returnUrl">@string.Format(WebPages.ParkingLotFloors_Index_fromArea,Model.ParkingLotsDetail.Name )</a></li>
    }
    else
    {
        <li><a href="@Url.Action("Index")">@WebPages.ParkingLotFloors_Index</a></li>
    }
    
        <li class="active">@ViewBag.Title</li>
    }
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-inverse">
            <div class="panel-heading">
                <div class="panel-heading-btn">
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-default" data-click="panel-expand"><i class="fa fa-expand"></i></a>
                    <a href="javascript:;" class="btn btn-xs btn-icon btn-circle btn-success" data-click="panel-reload"><i class="fa fa-repeat"></i></a>
                </div>
                <h4 class="panel-title">@ViewBag.Title</h4>
            </div>
            <div class="panel-toolbar">
                @if (string.IsNullOrEmpty(ViewBag.returnUrl as string) == false)
                {
                    <div class="btn-group" role="group" aria-label="First group">
                        <a href="@ViewBag.returnUrl" class="btn btn-white" title="@string.Format(Common.Back_To, string.Format(WebPages.ParkingLotFloors_Index_fromArea, Model.ParkingLotsDetail.Name))"><i class="glyphicon glyphicon-arrow-left"></i></a>
                    </div>
                }
                else
                {
                    <div class="btn-group" role="group" aria-label="First group">
                        <a href="@Url.Action("Index")" class="btn btn-white" title="@string.Format(Common.Back_To, WebPages.ParkingLotFloors_Index)"><i class="glyphicon glyphicon-arrow-left"></i></a>
                    </div>
                }

            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="panel-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.ParkingLotsDetail.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @if (Model.ParkingLotsID > 0)
                                {
                                    <label class="control-label">@Model.ParkingLotsDetail.Name</label>
                                    @Html.HiddenFor(model => model.ParkingLotsID)
                                }
                                else
                                {
                                    @Html.DropDownList("ParkingLotsID", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ParkingLotsID, "", new { @class = "text-danger" })
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FloorOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FloorOrder, new { htmlAttributes = new { @class = "form-control", @placeholder = "如與區域名稱相同，代表此區域沒有任何樓層!" } })
                                @Html.ValidationMessageFor(model => model.FloorOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FloorName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FloorName, new { htmlAttributes = new { @class = "form-control", @placeholder = "如與區域名稱相同，代表此區域沒有任何樓層!" } })
                                @Html.ValidationMessageFor(model => model.FloorName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CarTotalGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CarTotalGrid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CarTotalGrid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CarLastGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CarLastGrid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CarLastGrid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MotoTotalGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MotoTotalGrid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MotoTotalGrid, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MotoLastGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MotoLastGrid, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MotoLastGrid, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.Void)
                        @Html.HiddenFor(model => model.LastUpdate)
                    </div>
                </div>
                <div class="panel-footer text-right">
                    <input type="submit" value="@Common.Create" class="btn btn-default" />
                </div>
            }

        </div>
    </div>
</div>


