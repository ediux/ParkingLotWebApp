@model ParkingLotWebApp.Models.ParkingLotsFloor
@using Microsoft.AspNet.Identity
@{
    if (Model.ParkingLotsID >0)
    {
        ViewBag.Title = string.Format(Resources.WebPages.ParkingLotFloors_Create_FromArea, Model.ParkingLotsDetail.Name);
    }
    else
    {
        ViewBag.Title = Resources.WebPages.ParkingLotFloors_Create_New;
    }

}

<h2>@ViewBag.Title</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>@Resources.WebPages.ParkingLotFloors</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ParkingLotsDetail.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.ParkingLotsID >0)
                    {
                        <label class="control-label">@Model.ParkingLotsDetail.Name</label>
                        @Html.HiddenFor(model => model.ParkingLotsID)
                    }
                    else
                    {
                        @Html.DropDownList("ParkingLotsID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParkingLotsID, "", new { @class = "text-danger" })
                    }
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FloorOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FloorOrder, new { htmlAttributes = new { @class = "form-control", @placeholder = "如與區域名稱相同，代表此區域沒有任何樓層!" } })
                    @Html.ValidationMessageFor(model => model.FloorOrder, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.FloorName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FloorName, new { htmlAttributes = new { @class = "form-control",@placeholder ="如與區域名稱相同，代表此區域沒有任何樓層!" } })
                    @Html.ValidationMessageFor(model => model.FloorName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CarTotalGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CarTotalGrid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarTotalGrid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CarLastGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CarLastGrid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarLastGrid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MotoTotalGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MotoTotalGrid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MotoTotalGrid, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MotoLastGrid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MotoLastGrid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MotoLastGrid, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.Void)
            @Html.HiddenFor(model => model.LastUpdate)


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@Resources.Common.Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    @if (string.IsNullOrEmpty(ViewBag.returnUrl as string) == false)
    {
        <a href="@ViewBag.returnUrl">@string.Format(Resources.Common.Back_To, string.Format(Resources.WebPages.ParkingLotFloors_Index_fromArea,Model.ParkingLotsDetail.Name))</a>
    }
    else
    {
        <div>
            @Html.ActionLink(string.Format(Resources.Common.Back_To, Resources.WebPages.ParkingLotFloors_Index), "Index")
        </div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
