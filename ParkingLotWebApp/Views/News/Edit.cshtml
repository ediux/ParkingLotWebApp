@model ParkingLotWebApp.Models.News_Header
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Edit";
    if (IsAjax || ViewContext.IsChildAction)
    {
        Layout = null;
    }

    Model.LastUpdateUserId = User.Identity.GetUserId<int>();
    Model.LastUpdateUTCTime = DateTime.Now.ToUniversalTime();
}

@using (Html.BeginForm("Edit", "News", FormMethod.Post, new { @id = "newsHeaderEditor" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal m-t-15">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="col-sm-10">
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-2">公告期間</label>
            <div class="col-md-10">
                <div class="input-daterange input-group" id="datepicker">
                    @Html.TextBoxFor(model => model.StartTime, new { @class = "input-sm form-control" })
                    <span class="input-group-addon">@Resources.MUI.Common.To</span>
                    @Html.TextBoxFor(model => model.EndTime, new { @class = "input-sm form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.Void)
        @Html.EditorFor(model => model.CreateUserId, null)
        @Html.EditorFor(model => model.CreateUTCTime, null)
        @Html.EditorFor(model => model.LastUpdateUserId, null)
        @Html.EditorFor(model => model.LastUpdateUTCTime, null)

    </div>
}

@Styles.Render("~/Content/ckeditor/css")
@Scripts.Render("~/bundles/ckeditor/js")
<script src="~/Scripts/ckeditor/lang/@(System.Globalization.CultureInfo.CurrentUICulture.Name.ToLowerInvariant()).js" type="text/javascript"></script>

@if (Model.News_Body != null)
{
    var bodycurrentver = Model.News_Body.Where(w => w.Void == false).SingleOrDefault();
    if (bodycurrentver != null)
    {
        <script type="text/javascript">
            $(function () {
                $('#replacepageholder1').empty();
                $('#replacepageholder1').load('@Url.Action("Edit","NewsContext",new { id= bodycurrentver.Id })');           
            });
        </script>
    }
}


