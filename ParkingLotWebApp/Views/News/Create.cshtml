@model ParkingLotWebApp.Models.NewsPostViewModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = WebPages.News_Create_New;
    if (IsAjax || ViewContext.IsChildAction)
    {
        Layout = null;
    }

}

@*<h2>@MUI.WebPages.News_Create_New</h2>
    <form class="form-horizontal"></form>*@
@using (Ajax.BeginForm("Create", null, new AjaxOptions() { HttpMethod = "Post", UpdateTargetId = "replacepageholder", OnSuccess= "onSuccess" }, htmlAttributes: new { @class = "form-horizontal m-15" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Void)
    @Html.HiddenFor(model => model.Body_Id)
    @Html.HiddenFor(model => model.Version)
    @Html.HiddenFor(model => model.CreateUserId)
    @Html.HiddenFor(model => model.CreateUTCTime)
    @Html.HiddenFor(model => model.LastUpdateUserId)
    @Html.HiddenFor(model => model.LastUpdateUTCTime)
    <div class="form-group">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label col-sm-2" })
        <div class="col-sm-10">
            <div class="input-group input-group-sm">
                @Html.EditorFor(model => model.Caption, new { htmlAttributes = new { @class = "form-control input-sm" } })
                <span class="input-group-btn">
                    <button class="btn btn-default" type="submit">@Common.Create</button>
                    <button class="btn btn-default" type="button" onclick="document.location.reload();">@Common.Cancel</button>
                </span>
                @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2">公告期間</label>
        <div class="col-md-10">
            <div class="input-daterange input-group" id="datepicker">
                @Html.TextBoxFor(model => model.StartTime, "{0:yyyy/MM/dd}", new { @class = "input-sm form-control" })
                <span class="input-group-addon">@Common.To</span>
                @Html.TextBoxFor(model => model.EndTime, "{0:yyyy/MM/dd}", new { @class = "input-sm form-control" })
            </div>
            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <div class="checkbox">
                <label>
                    @Html.CheckBoxFor(model => model.IsTop) @WebPages.NewsTop
                </label>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.TextArea(Html.NameFor( model => model.Content).ToString(),Html.Raw(Model.Content))
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
@Styles.Render("~/Content/bootstrap3-datepicker")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/moment")
@Scripts.Render("~/bundles/bootstrap-datepicker")
<script src="@Scripts.Url("~/Scripts/locales/bootstrap-datepicker."+ System.Globalization.CultureInfo.CurrentUICulture.Name+".min.js")" type="text/javascript"></script>
@Styles.Render("~/Content/ckeditor/css")
@Scripts.Render("~/bundles/ckeditor/js")
<script src="~/Scripts/ckeditor/lang/@(System.Globalization.CultureInfo.CurrentUICulture.Name.ToLowerInvariant()).js" type="text/javascript"></script>
<script type="text/javascript">
    function onSuccess() {
        window.location.reload();
    }
    $(function () {
        $('.input-daterange').datepicker({
            format: 'yyyy/mm/dd',
            language: '@System.Globalization.CultureInfo.CurrentUICulture.Name',
            autoclose: true
        });
        CKEDITOR.editor.replace('@Html.IdFor(p=>p.Content)', {
            width: '100%',
            height: 300,
            removePlugins: 'resize',
            toolbar: "Full",
            toolbar_Full: [
    { name: 'document', items: ['Source', '-', 'Preview', 'Print', '-', 'Templates'] },
    { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
    { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'SpellChecker', 'Scayt'] },
    {
        name: 'forms', items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
          'HiddenField']
    },
    { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
    {
        name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv',
        '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl']
    },
    { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
    { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
    { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
    { name: 'colors', items: ['TextColor', 'BGColor'] },
    { name: 'tools', items: ['Maximize', 'ShowBlocks'] }
            ]
        });
    });
</script>

