@model ParkingLotWebApp.Models.News_Body
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Edit";
    if (IsAjax || ViewContext.IsChildAction)
    {
        Layout = null;
    }
    Model.LastUpdateUserId = User.Identity.GetUserId<int>();
    Model.LastUpdateUTCTime = DateTime.Now.ToUniversalTime();
}

@if (!IsAjax && ViewContext.IsChildAction==false)
{
   
    using (Ajax.BeginForm("Edit", "NewsContext", null,
                        new AjaxOptions() { HttpMethod = "Post", UpdateTargetId = "editorplaceholder" }
                        , new { @id = "newsbodyeditform" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.Header_Id)

            @Html.TextAreaFor(model => model.Content)
            @Html.HiddenFor(model => model.Version)
            @Html.HiddenFor(model => model.CreateUserId)
            @Html.HiddenFor(model => model.CreateUTCTime)
            @Html.HiddenFor(model => model.LastUpdateUserId)
            @Html.HiddenFor(model => model.LastUpdateUTCTime)
        </div>
    }

  
}
else
{
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Header_Id)

    @Html.TextAreaFor(model => model.Content)
    @Html.HiddenFor(model => model.Version)
    @Html.HiddenFor(model => model.CreateUserId)
    @Html.HiddenFor(model => model.CreateUTCTime)
    @Html.HiddenFor(model => model.LastUpdateUserId)
    @Html.HiddenFor(model => model.LastUpdateUTCTime)
}


@Styles.Render("~/Content/ckeditor/css")
@Scripts.Render("~/bundles/ckeditor/js")
<script src="~/Scripts/ckeditor/lang/@(System.Globalization.CultureInfo.CurrentUICulture.Name.ToLowerInvariant()).js" type="text/javascript"></script>
<script type="text/javascript">
        function saveCaption() {

        }

        $(function () {
            CKEDITOR.editor.replace('@Html.IdFor(model => model.Content)', {
                toolbar: "Full",
                toolbar_Full: [
        { name: 'document', items: ['Source', '-', 'Preview', 'Print', '-', 'Templates'] },
        { name: 'clipboard', items: ['Cut', 'Copy', 'Paste', 'PasteText', 'PasteFromWord', '-', 'Undo', 'Redo'] },
        { name: 'editing', items: ['Find', 'Replace', '-', 'SelectAll', '-', 'SpellChecker', 'Scayt'] },
        {
            name: 'forms', items: ['Form', 'Checkbox', 'Radio', 'TextField', 'Textarea', 'Select', 'Button', 'ImageButton',
              'HiddenField']
        },
        { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
        {
            name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', 'CreateDiv',
            '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl']
        },
        { name: 'links', items: ['Link', 'Unlink', 'Anchor'] },
        { name: 'insert', items: ['Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak', 'Iframe'] },
        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
        { name: 'colors', items: ['TextColor', 'BGColor'] },
        { name: 'tools', items: ['Maximize', 'ShowBlocks'] }
                ]
            });

        });
</script>
