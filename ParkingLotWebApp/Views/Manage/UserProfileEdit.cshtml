@model ParkingLotWebApp.Models.UserProfileViewModel

@{
    ViewBag.Title = string.Format(Common.ProfileEdit, Model.DisplayName);
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Common.ApplicationUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <label class="control-label form-control-static">@Html.DisplayTextFor(model => model.UserName)</label>
            </div>
        </div>
        @Html.HiddenFor(model => model.UserName)
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.PasswordHash)
        @Html.HiddenFor(model => model.SecurityStamp)
        @Html.HiddenFor(model => model.TwoFactorEnabled)
        @Html.HiddenFor(model => model.Void)
        @Html.HiddenFor(model => model.EMailConfirmed)
        @Html.HiddenFor(model => model.PhoneConfirmed)
        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, MUI.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleId,new SelectList(ViewBag.RoleId as System.Collections.IEnumerable,"Value","Text") , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.CreateUserId)
        @Html.HiddenFor(model => model.CreateTime)
        @Html.HiddenFor(model => model.LastUpdateUserId)
        @Html.HiddenFor(model => model.LastUpdateTime)
        @Html.HiddenFor(model => model.LastActivityTime)
        @Html.HiddenFor(model => model.LastUnlockedTime)
        @Html.HiddenFor(model => model.LastLoginFailTime)
        @Html.HiddenFor(model => model.AccessFailedCount)
        @Html.HiddenFor(model => model.LockoutEnabled)
        @Html.HiddenFor(model => model.LockoutEndDate)
        @Html.HiddenFor(model => model.ResetPasswordToken)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Common.Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Common.Back_To_UserList, "AllUsers")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
